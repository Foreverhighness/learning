//! Command line args
#![allow(clippy::allow_attributes, reason = "don't check generated code")]
#![allow(clippy::allow_attributes_without_reason, reason = "don't check generated code")]

use std::ffi::OsString;

xflags::xflags! {
    src "./src/flags.rs"

    cmd cli {
        /// bv number or address
        required bv: OsString
    }
}

// generated start
// The following code is generated by `xflags` macro.
// Run `env UPDATE_XFLAGS=1 cargo build` to regenerate.
#[derive(Debug)]
pub struct Cli {
    pub bv: OsString,
}

impl Cli {
    #[allow(dead_code)]
    pub fn from_env_or_exit() -> Self {
        Self::from_env_or_exit_()
    }

    #[allow(dead_code)]
    pub fn from_env() -> xflags::Result<Self> {
        Self::from_env_()
    }

    #[allow(dead_code)]
    pub fn from_vec(args: Vec<std::ffi::OsString>) -> xflags::Result<Self> {
        Self::from_vec_(args)
    }
}
// generated end
